name: Build and Deploy Backend to Docker and AWS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Build and push backend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/lovely_voicemail_backend:latest

    - name: Pack backend application
      run: |
        cd backend
        zip -r ../backend-${{ github.run_id }}.zip .
      working-directory: ./backend

    - name: Upload backend artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend-deployment-package
        path: backend-${{ github.run_id }}.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download backend artifact
      uses: actions/download-artifact@v2
      with:
        name: backend-deployment-package

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install AWS CLI and EB CLI
      run: |
        pip install awscli
        pip install awsebcli

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: lovely_voicemail_backend
        environment_name: init-env
        version_label: backend-${{ github.run_id }}
        region: ${{ secrets.AWS_REGION }}
        deployment_package: backend-${{ github.run_id }}.zip
        wait_for_deployment: true
        use_existing_version_if_available: true
